/*--------------------------------------
----------------------------------------
---- AURA PROJECT APP - MAP SCRIPTS ----
----------------------------------------
--------------------------------------*/

/* Global variables*/

var globalMap;
var globalPolygon;
var globalPosition;
var globalMarker;
var globalRectangle;
var globalSecurityRectangle;
var globalPath;



/* Function to find the user s GPS location via HTML5 */

function findLocation() {
	if (navigator.geolocation)
		navigator.geolocation.getCurrentPosition(successCallback, errorCallback);
	else
		alert("Votre navigateur ne prend pas en compte la géolocalisation HTML5");
	
	function successCallback(position){
		
		/* Refresh Map Center with the user location */
		var location = {lat:position.coords.latitude , lng:position.coords.longitude};
		refreshMapCenter(location);
	};  

	function errorCallback(error){
		switch(error.code){
			case error.PERMISSION_DENIED:

				/* Permission Denied Message */
				alert("L'utilisateur n'a pas autorisé l'accès à sa position");
				break;          
			case error.POSITION_UNAVAILABLE:

				/* Position Unavailable Message */
				alert("L'emplacement de l'utilisateur n'a pas pu être déterminé");
				break;
			case error.TIMEOUT:

				/* Timeout Message */
				alert("Le service n'a pas répondu à temps");
				break;
		}
	};
}



/* Function to find the GPS location of an address via Google Map API */

function findAddress() {
	if (document.forms["form"]["addressAttribute"].value == null || document.forms["form"]["addressAttribute"].value == "")
	{
		alert("Vous devez renseigner l'adresse");
	}
	else {		
		var geocoder = new google.maps.Geocoder();
		// Récupération de l'adresse tapée dans le formulaire
		var adresse = document.getElementById('addressAttribute').value;
		geocoder.geocode( { 'address': adresse}, function(results, status) {

			if (status == google.maps.GeocoderStatus.OK) {

				// Création de la carte et du marqueur du lieu (épingle)
				refreshMapCenter({lat:results[0].geometry.location.lat(), lng:results[0].geometry.location.lng()});
			} 
			else {
				alert('Adresse introuvable: ' + status);
			}
		});
	}
}



/* Map initialisation */

function initMap() {

	/* Initialisation Rectangle Height */
	var rectangleHeight = 0.0004;

	/* Initialisation Rectangle Width */
	var rectangleWidth = 0.0004;

	/* Initialisation GPS Location */
	var GPSPosition = {lat:45.91926,lng:6.157999600000039};

	/* Map creation - Google Map API */
	var map = new google.maps.Map(document.getElementById('map'), {
		zoom: 19,
		center: GPSPosition,
		scrollwheel: true,
		mapTypeId: google.maps.MapTypeId.ROADMAP
	});

	/* Initialisation Marker - Google Map API */
	var marker = new google.maps.Marker({
		position: GPSPosition,
		map: map,
		title: "Position GPS",
		draggable:true
	});
	
	
	/* Polygon s Path Initialisation */
	var polygonCoords = [
		{lat: GPSPosition.lat-(rectangleHeight/2), lng: GPSPosition.lng-(rectangleWidth/2)},
		{lat: GPSPosition.lat-(rectangleHeight/2), lng: GPSPosition.lng+(rectangleWidth/2)},
		{lat: GPSPosition.lat+(rectangleHeight/2), lng: GPSPosition.lng+(rectangleWidth/2)},
		{lat: GPSPosition.lat+(rectangleHeight/2), lng: GPSPosition.lng-(rectangleWidth/2)}
	];
	
	/* Polygon creation */
	var polygon = new google.maps.Polygon({
		paths: polygonCoords,
		strokeColor: '#FF0000',
		strokeOpacity: 0.8,
		strokeWeight: 2,
		fillColor: '#FF0000',
		fillOpacity: 0.35,
		draggable:true,
		editable:true
	});
	
	/* Polygon-Map association */
	polygon.setMap(map);

	/* Global Variables Update */
	globalMarker = marker;
	globalPolygon = polygon;
	globalMap = map;
}



/* Function for refresh the center of the map */

function refreshMapCenter(GPSPosition) {
	
	/* Rectangle Height */
	var rectangleHeight = 0.0004;

	/* Rectangle Width */
	var rectangleWidth = 0.0004;
	
	/* Remove the last polygon */
	globalPolygon.setMap(null);

	/* New Polygon s Path Initialisation */
	var polygonCoords = [
		{lat: GPSPosition.lat-(rectangleHeight/2), lng: GPSPosition.lng-(rectangleWidth/2)},
		{lat: GPSPosition.lat-(rectangleHeight/2), lng: GPSPosition.lng+(rectangleWidth/2)},
		{lat: GPSPosition.lat+(rectangleHeight/2), lng: GPSPosition.lng+(rectangleWidth/2)},
		{lat: GPSPosition.lat+(rectangleHeight/2), lng: GPSPosition.lng-(rectangleWidth/2)}
	];
	
	/* New Polygon Creation */
	var polygon = new google.maps.Polygon({
		paths: polygonCoords,
		strokeColor: '#FF0000',
		strokeOpacity: 0.8,
		strokeWeight: 2,
		fillColor: '#FF0000',
		fillOpacity: 0.35,
		draggable:true,
		editable:true
	});
	
	/* New Polygon-Map association */
	polygon.setMap(globalMap);
	
	/* Global Polygon Variable Update */
	globalPolygon = polygon;

	/* Move marker and map center */
	globalMarker.setPosition(GPSPosition);
    	globalMap.panTo(GPSPosition);

	/* Zoom Reset */
	globalMap.setZoom(19);	
}



/* Function for calculate the minimum rectangle */

function rectangleDrawer() {

	/* Polygon s Path Acquisition */
	var polygonNewCoords = globalPolygon.getPath();

	/* Main Points Initialisation */
	var indexMaxLat = 0;
	var indexMinLat = 0;
	var indexMaxLng = 0;
	var indexMinLng = 0;	
	

	/* polygonNewCoords iteration to find max and min*/
	for (var i =1; i < polygonNewCoords.getLength(); i++) {
		var newPoint = polygonNewCoords.getAt(i);
		
		/* Latitude Minimum */
		if (newPoint.lat() < polygonNewCoords.getAt(indexMinLat).lat())
		{
			indexMinLat = i;
		}
		
		/* Not Latitude Minimum */
		else
		{
			/* Latitude Maximum */
			if (newPoint.lat() > polygonNewCoords.getAt(indexMaxLat).lat())
			{
				indexMaxLat = i;
			}
		}
		
		/* Longitude Minimum */
		if (newPoint.lng() < polygonNewCoords.getAt(indexMinLng).lng())
		{
			indexMinLng = i;
		}

		/* Not Longitude Minimum */
		else
		{
			/* Longitude Maximum */
			if (newPoint.lng() > polygonNewCoords.getAt(indexMaxLng).lng())
			{
				indexMaxLng = i;
			}
		}		
	}

	/* First Rectangle Creation */	
	if (globalRectangle == null)
	{
		/* Rectangle creation */
		var rectangle = new google.maps.Rectangle({
			strokeColor: '#FF0000',
			strokeOpacity: 0.8,
			strokeWeight: 2,
			fillColor: '#FF0000',
			fillOpacity: 0.35,
			map: globalMap,
			bounds: {
				north: polygonNewCoords.getAt(indexMaxLat).lat(),
				south: polygonNewCoords.getAt(indexMinLat).lat(),
				east: polygonNewCoords.getAt(indexMaxLng).lng(),
				west: polygonNewCoords.getAt(indexMinLng).lng()
			}
		});
		
		/* Global Rectangle Variable Update */
		globalRectangle = rectangle;
		
		/* Rectangle security creation */
		var securityRectangle = new google.maps.Rectangle({
			strokeColor: '#FFA500',
			strokeOpacity: 0.3,
			strokeWeight: 1,
			fillColor: '#FFA500',
			fillOpacity: 0.35,
			map: globalMap,
			bounds: {
				north: polygonNewCoords.getAt(indexMaxLat).lat()+0.000075,
				south: polygonNewCoords.getAt(indexMinLat).lat()-0.000075,
				east: polygonNewCoords.getAt(indexMaxLng).lng()+0.0001,
				west: polygonNewCoords.getAt(indexMinLng).lng()-0.0001
			}
		});
		
		/* Global Rectangle Security Variable Update */
		globalSecurityRectangle = securityRectangle;
	}
	
	/* Rectangle Already Exists */
	else
	{
		/* Move Rectangle */
		globalRectangle.setBounds({
				north: polygonNewCoords.getAt(indexMaxLat).lat(),
				south: polygonNewCoords.getAt(indexMinLat).lat(),
				east: polygonNewCoords.getAt(indexMaxLng).lng(),
				west: polygonNewCoords.getAt(indexMinLng).lng()
			}
			);
		
		/* Move Rectangle Security */
		globalSecurityRectangle.setBounds({
				north: polygonNewCoords.getAt(indexMaxLat).lat()+0.000075,
				south: polygonNewCoords.getAt(indexMinLat).lat()-0.000075,
				east: polygonNewCoords.getAt(indexMaxLng).lng()+0.0001,
				west: polygonNewCoords.getAt(indexMinLng).lng()-0.0001
		});
	}
}



/* Function for send all GPS locations and file download redirection */

function wayDrawer() {

	/* Check that an altitude exists */
	if (document.forms["form"]["altitudeAttribute"].value == null || document.forms["form"]["altitudeAttribute"].value == "" || globalRectangle == null)
	{
		alert("Vous devez renseigner une hauteur de vol");
	}
	else
	{
		/* Rectangle et Rectangle Security Data Acquisition */
		var rectangleBounds = globalRectangle.getBounds();
		var rectangleNorthEast = rectangleBounds.getNorthEast();
		var rectangleSouthWest = rectangleBounds.getSouthWest();
		
		/* Variables Initialisation */
		var elevationNorthEast = -123456789;
		var elevationSouthWest = -123456789;
		var locations = [];

		/* Altitude Data Acquisition */
		var heightQuadcopter = document.forms["form"]["altitudeAttribute"].value;

		/* Locations Variables Creation */
		locations.push(new google.maps.LatLng(rectangleNorthEast.lat(),rectangleNorthEast.lng()));
		locations.push(new google.maps.LatLng(rectangleSouthWest.lat(),rectangleSouthWest.lng()));

		/* Positional Request Variable Creation */
		var positionalRequest = {
			'locations': locations
		};

		/* Rectangle Elevation Acquisition - Google Map API */
		var elevator = new google.maps.ElevationService();
		var statusGlobal = 0;
		elevator.getElevationForLocations(positionalRequest, function(results, status) {
			
			if (google.maps.ElevationStatus.OK && results[0]) {
			  		elevationNorthEast = results[0].elevation;
					elevationSouthWest = results[1].elevation;
			}
			else
			{
				alert("L'altitude de la zone géographique n'a pas pu déterminée");
			}
		});


			/* Timeout to wait Google Map API Elevation data */
			setTimeout(function redirect()
			{
				/* Check that elevation is not the initialisation value */ 
				if (elevationNorthEast !=-123456789 & elevationSouthWest!=-123456789)
				{
					/* Find the maximal elevation */
					var elevation;

					if (elevationSouthWest >= elevationNorthEast)
					{
						elevation = elevationSouthWest;
					}
					else
					{
						elevation = elevationNorthEast;
					}

					/* createNavigation PHP Script redirection with all data */
					var url ="/scripts/createNavigation.php?NorthEastLat=" + rectangleNorthEast.lat() + "&NorthEastLng=" + rectangleNorthEast.lng() 						+ "&SouthWestLat=" + rectangleSouthWest.lat()+ "&SouthWestLng=" + rectangleSouthWest.lng() + "&Elevation=" + elevation + 						"&HeightQuadcopter=" + heightQuadcopter + "&StartLat=" + globalMarker.getPosition().lat() + "&StartLng=" + 						globalMarker.getPosition().lng();
	
					document.location.href = url;
				}
				
				/* Elevation values are initialisation values */
				else
				{
					alert("L'altitude de la zone géographique n'a pas pu déterminée");
				}
			},1000);
	}
}

function showMap() {

	/* Initialisation GPS Location */
	var GPSPosition = {lat:45.91926,lng:6.157999600000039};


	/* Map creation - Google Map API */
	var map = new google.maps.Map(document.getElementById('map'), {
		zoom: 19,
		center: GPSPosition,
		scrollwheel: true,
		mapTypeId: google.maps.MapTypeId.ROADMAP
	});
	globalMap = map;
}

function addPathPoint(lat,lng,coordNb) {

	if (globalPath == null)
	{
		var myPlanCoordinates = new Array();
		for(i=0; i<(coordNb-1); i = i+1)
		{
			myPlanCoordinates.push(new google.maps.LatLng(lat[i], lng[i]));
		}
		
		globalMap.panTo(myPlanCoordinates[0]);

		/* Initialisation Marker - Google Map API */
		var marker = new google.maps.Marker({
			position: myPlanCoordinates[0],
			map: globalMap,
			title: "Position GPS"
		});

		
	
		var myPath = new google.maps.Polyline({
		  path: myPlanCoordinates,
		  geodesic: true,
		  strokeColor: '#FF0000',
		  strokeOpacity: 1.0,
		  strokeWeight: 2
		});
	
		globalMarker = marker;

		myPath.setMap(globalMap);
		globalPath = myPath;
	}
}



